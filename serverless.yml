service: aws-billing-to-slack

plugins:
  - serverless-python-requirements
provider:
  name: aws
  # Sane defaults, easy for multi-account/multi-region organizations
  profile: ${opt:aws_profile, 'default'}
  region: ${opt:aws_region, 'us-east-1'}
  runtime: python3.7

  iamRoleStatements:
    #- Effect: "Allow"
    #  Action:
    #    - "ce:GetCostAndUsage"
    #  Resource: "*"
    # Needed to get account details and costs from central account
    - Effect: "Allow"
      Action:
        - "sts:AssumeRole"
      Resource: "*"

functions:
  report_cost:
    handler: handler.report_cost

    description: Send account daily billing data to Slack channel

    # Keep costs minimal
    memorySize: 128
    timeout: 10

    events:
      # Every day at 10:00 UTC
      - schedule: cron(0 10 * * ? *)

    environment:
      SLACK_WEBHOOK_URL: ${opt:slack_url}
      CREDITS_EXPIRE_DATE: ${opt:credits_expire_date}
      CREDITS_REMAINING_AS_OF: ${opt:credits_remaining_date}
      CREDITS_REMAINING: ${opt:credits_remaining}
      CA_ACCOUNT: ${opt:ca_account}
      CA_ROLE: ${opt:ca_role}
      ACCOUNT_NAME_SEARCH_TERM: ${opt:account_name_search_term}